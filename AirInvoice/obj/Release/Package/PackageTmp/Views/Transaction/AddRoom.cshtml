@{
    ViewBag.Title = "NHẬP THÊM PHÒNG";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model AirlineInvoice.Models.TransactionRoom
@{
    int CountService = ViewBag.CountService;
    int CountCustomer = ViewBag.CountCustomer;
    var room = (AirlineInvoice.Models.Room)ViewBag.Room;
}
<style>
           .myModal .modal-dialog {
                width: 800px;
            }
        </style>
<script type="text/javascript">
    $(function () {
        $('#txtStartTime').datetimepicker({
            mask: true
        });
        $('#txtStartTime').val('@Model.StartTime.ToString("yyyy/MM/dd HH:mm")');
        $('#txtEndTime').datetimepicker({
            mask: true
        });
        $('#txtEndTime').val('@Model.EndTime.ToString("yyyy/MM/dd HH:mm")');
    });
   
    function SubmitRoom() {
        if (SelectedRoom != null) {
            $.ajax(
                {
                    url: '@Url.Action("CheckRoomValid")',
                    data: {
                        TransID: parseInt('@Model.TransactionID'),
                        SelectedRoomID: SelectedRoom.RoomID
                    },
                    success: function (data) {
                        if (data == 'True') {
                            $("#hdRoomID").val(SelectedRoom.RoomID);
                            $("#lblRoomCode").html(SelectedRoom.RoomCode + " - Tầng " + SelectedRoom.Floor);
                            var price = 0;
                            if ($("#cboRentType").val() == '@((int)AirlineInvoice.Utils.RentType.Normal)') {
                                price = SelectedRoom.PriceByDay;
                            }
                            else if ($("#cboRentType").val() == '@((int)AirlineInvoice.Utils.RentType.OverNight)') {
                                price = SelectedRoom.PriceOverNight;
                            }
                            else if ($("#cboRentType").val() == '@((int)AirlineInvoice.Utils.RentType.HourStep)') {
                                price = SelectedRoom.PriceByHourBegin;
                            }
                            $("#txtPrice").val(price);
                        }
                        else {
                            ShowWarning("Phòng đã được sử dụng");
                        }
                    }
                }
            );
        }
    }
    var identityNumber = '@Model.IdentityNumber';
    function txtIdentityNumber_Blur() {
        var newIdentity = $("#txtIdentityNumber").val();
        if (newIdentity != identityNumber) {
            identityNumber = newIdentity;
            $("#squaresWaveG").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("SearchCustomer", "Home")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    identityNumber: identityNumber
                }),
                success: function (data) {
                    $("#squaresWaveG").hide();
                    if (data != null && data.CustomerID > 0) {
                        $("#txtCustomerName").val(data.FullName);
                        $("#txtPhone").val(data.Phone);
                        $("#hdCustomerID").val(data.CustomerID);
                    }
                    else {
                        $("#hdCustomerID").val(data.CustomerID);
                    }
                }
            });
        }
    }

    function ConfirmSubmit() {
        if ($("#lblRoomCode").html().trim() == "" || parseInt($("#hdRoomID").val()) <= 0) {
            ShowWarning("Bạn chưa chọn phòng.");
        }
        else {
            document.getElementById("add-room-form").submit();
        }
    }
</script>
<div class="wrapper wrapper-content animated fadeInRight">
    <div id="lblError" style="color: red; display: none;"></div>
    <div class="row">
        <div class="col-md-3 col-lg-3 col-xs-3 step">
            @Html.ActionLink("Thông tin chung - " + Model.Transaction.TransactionCode, "EditTransaction", new { id = AirlineInvoice.Utils.CommonFunction.Shrink(Model.TransactionID) }, new { @class = "btn btn-white" })
        </div>
        <div class="col-md-3 col-lg-3 col-xs-3 step">
            <a href="#" class="btn btn-primary">Phòng đã thuê (<span id="room-count">@ViewBag.CountRoom</span>)</a>
        </div>
        <div class="col-md-3 col-lg-3 col-xs-3 step">
            @Html.ActionLink("Danh sách khách ở (" + CountCustomer + ")", "TransactionCustomer", new { TransactionID = AirlineInvoice.Utils.CommonFunction.Shrink(Model.TransactionID) }, new { @class = "btn btn-white" })
        </div>
        <div class="col-md-3 col-lg-3 col-xs-3 step">
            @Html.ActionLink("Dịch vụ sử dụng (" + CountService + ")", "TransactionService", new { id = AirlineInvoice.Utils.CommonFunction.Shrink(Model.TransactionID) }, new { @class = "btn btn-white" })
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12 col-lg-12 col-xs-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5 id="form-title">@ViewBag.Title</h5>
                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm("AddRoom", "Transaction", FormMethod.Post, new {id="add-room-form", autocomplete = "off", @class = "form-horizontal" }))
                    {
 @Html.AntiForgeryToken()
 @Html.ValidationSummary()
 @Html.HiddenFor(x => x.TransactionRoomID)
                        @Html.HiddenFor(x => x.RoomID, new { id = "hdRoomID" })
                        @Html.HiddenFor(x => x.CustomerID, new { id = "hdCustomerID" })
                        @Html.HiddenFor(x => x.TransactionID)
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Phòng</label>
                            <div class="col-sm-4">
                                <label id="lblRoomCode" class="form-control" style="background-color: silver;">
                                    @if (room != null)
                                    { 
                                    <strong>@string.Format("{0} - Tầng {1}", room.RoomCode, room.Floor)</strong> 
                                    }
                                </label>
                            </div>
                            <div class="col-sm-2">
                                <a href="#" data-toggle="modal" data-target="#myModal" class="btn btn-white fa fa-search" >&nbsp;</a>
                            </div>
                        </div>
                       
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Loại hình</label>
                            <div class="col-sm-10">
                                @Html.DropDownListFor(m => m.RentType, AirlineInvoice.Utils.DataComboSource.RentType(), new { @class = "form-control", id = "cboRentType" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Giờ vào</label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.StartTime, new { @class = "form-control", id = "txtStartTime", autocomplete = "off" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Kết thúc</label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.EndTime, new { @class = "form-control", id = "txtEndTime", autocomplete = "off" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Mô tả</label>
                            <div class="col-sm-10">
                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", id = "txtDescription", autocomplete = "off" })
                            </div>
                        </div>

                        <div class="hr-line-dashed"></div>
                        <div class="form-group">
                            <div class="col-sm-4 col-sm-offset-2">
                                <a class="btn btn-white" href="@Url.Action("TransactionRoom", new { TransactionID = AirlineInvoice.Utils.CommonFunction.Shrink(Model.TransactionID) })">Hủy</a>
                                <input type="button" onclick="ConfirmSubmit();" value="Thêm mới" class="btn btn-primary" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Chọn phòng</h4>
            </div>
            <div class="modal-body" id="room-data">
                @{
                    Html.RenderAction("ChooseRoom", "Reception", new { status = 1 });   
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="fa fa-check btn btn-primary" data-dismiss="modal" onclick="SubmitRoom();">Đồng ý</button>
            </div>
        </div>

    </div>
</div>
