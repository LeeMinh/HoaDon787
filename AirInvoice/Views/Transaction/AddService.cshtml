@{
    ViewBag.Title = "THÊM MỚI DỊCH VỤ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model AirlineInvoice.Models.TransactionServiceModel
@{
    int CountService = ViewBag.CountService;
    var lstCustomer = new List<SelectListItem>();
    lstCustomer.Add(new SelectListItem() {  Selected = true, Text = "Chọn khách hàng", Value = "0"});
    var  lstRoom = new List<SelectListItem>();
    lstRoom.Add(new SelectListItem() { Selected = true, Text = "Chọn phòng", Value = "0" });
    
    if(Model.TransactionRooms!=null)
    {
        foreach (var item in Model.TransactionRooms)
        {
            var groupName = item.RoomCode + " - Tầng " + item.Floor;
            var group = new SelectListGroup() { Name = groupName };
            
            lstRoom.Add(new SelectListItem() { Selected = Model.TransactionService.TransactionRoomID == item.CustomerID ? true : false, Text = item.RoomCode + " - Tầng " + item.Floor, Value = item.CustomerID.ToString() });
            if (Model.Customers != null)
            {
                foreach (var ytem in Model.Customers)
                {
                    lstCustomer.Add(new SelectListItem()
                    {
                        Selected = Model.TransactionService.CustomerID == ytem.CustomerID ? true : false,
                        Text = ytem.CustomerName,
                        Value = ytem.CustomerID.ToString(),
                        Group = group
                    });
                }
            }
        }
    }
}
<script type="text/javascript">
    var lstCustomer = JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Customers))');
    $(function () {
        $('#txtStartTime').datetimepicker({
            mask: true
        });
        $('#txtStartTime').val('@Model.TransactionService.CreateDate.ToString("yyyy/MM/dd HH:mm")');
    });
   
    function SubmitService() {
        var service = SelectedService();
        if (service != null) {
            $("#lblServiceCode").html(service.ServiceCode + " - " + service.ServiceName);
            $("#hdServiceID").val(service.ServiceID);
        }
    }
    var identityNumber = '@Model.TransactionService.IdentityNumber';
    function txtIdentityNumber_Blur() {
        var newIdentity = $("#txtIdentityNumber").val();
        if (newIdentity != identityNumber) {
            identityNumber = newIdentity;
            $("#squaresWaveG").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("SearchCustomer", "Home")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    identityNumber: identityNumber
                }),
                success: function (data) {
                    $("#squaresWaveG").hide();
                    if (data != null && data.CustomerID > 0) {
                        $("#txtCustomerName").val(data.FullName);
                        $("#txtPhone").val(data.Phone);
                        $("#hdCustomerID").val(data.CustomerID);
                        lstCustomer.push(data);
                        $("#drpCustomer").val(data.CustomerID);
                    }
                    else {
                        $("#hdCustomerID").val(data.CustomerID);
                    }
                }
            });
        }
    }

    function drpCustomer_change(sender) {
        for (var i = 0; i < lstCustomer.length; i++) {
            var cusID = parseInt($(sender).val());
            if (cusID == lstCustomer[i].CustomerID) {
                $("#txtCustomerName").val(lstCustomer[i].FullName);
                $("#txtPhone").val(lstCustomer[i].Phone);
                $("#hdCustomerID").val(lstCustomer[i].CustomerID);
                $("#hdIdentityNumber").val(lstCus
            }
        }
    }

    function drpRoom_change(sender) {
        $("#drpCustomer").val("0");
        $("#drpCustomer").childs.each(function () {
            if ($(this).attr("label") != $("#drpRoom").text()) {
                $(this).attr("disabled", "true");
            }
            else {
                $(this).attr("disabled", "false");
            }
        });
    }
</script>
<div class="wrapper wrapper-content animated fadeInRight">
    <div id="lblError" style="color: red; display: none;"></div>
    <div class="row">
        <div class="col-md-3 col-lg-3 col-xs-3 step">
            @Html.ActionLink("Thông tin chung", "EditTransaction", new { id = AirlineInvoice.Utils.CommonFunction.Shrink(Model.TransactionService.TransactionID) }, new { @class = "btn btn-white" })
        </div>
        <div class="col-md-3 col-lg-3 col-xs-3 step">
            @Html.ActionLink("Phòng đã thuê (" + Model.TransactionRooms.Count + ")", "TransactionRoom", new { TransactionID = AirlineInvoice.Utils.CommonFunction.Shrink(Model.TransactionService.TransactionID) }, new { @class = "btn btn-white" })
        </div>
        <div class="col-md-3 col-lg-3 col-xs-3 step">
            @Html.ActionLink("Danh sách khách (" + Model.Customers.Count + ")", "TransactionCustomer", new { TransactionID =  AirlineInvoice.Utils.CommonFunction.Shrink( Model.TransactionService.TransactionID) }, new { @class = "btn btn-white" })
        </div>
        <div class="col-md-3 col-lg-3 col-xs-3 step">
            <a href="#" class="btn btn-white">Dịch vụ sử dụng(@CountService)</a>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12 col-lg-12 col-xs-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5 id="form-title">@ViewBag.Title</h5>
                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm("AddService", "Transaction", FormMethod.Post, new { autocomplete = "off", @class = "form-horizontal" }))
                    {
 @Html.AntiForgeryToken()
 @Html.ValidationSummary()
                        @Html.HiddenFor(x => x.TransactionService.TransactionRoomID, new { id = "hdRoomID" })
                        @Html.HiddenFor(x => x.TransactionService.CustomerID, new { id = "hdCustomerID" })
                        @Html.HiddenFor(x => x.TransactionService.TransactionID)
                        @Html.HiddenFor(x => x.TransactionService.ServiceID, new { id="hdServiceID" })
                        <div class="form-group">
                            <label class="col-sm-2 control-label" title="Chọn khách hàng">Phòng</label>
                            <div class="col-sm-10">
                                @Html.DropDownListFor(x=>x.TransactionService.TransactionRoomID, lstRoom,new { id="drpRoom", onchange="drpRoom_change(this);", @class="form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label" title="Chọn khách hàng">Khách hàng</label>
                            <div class="col-sm-10">
                                @Html.DropDownListFor(x=>x.TransactionService.CustomerID, lstCustomer,new { id="drpCustomer", onchange="drpCustomer_change(this);", @class="form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label" title="Chứng minh thư nhân dân">CMTND</label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.TransactionService.IdentityNumber, new { @class = "form-control", id = "txtIdentityNumber", onblur = "txtIdentityNumber_Blur();", autocomplete = "off" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Tên khách</label>
                            <div class="col-sm-10">@Html.TextBoxFor(m => m.TransactionService.CustomerName, new { @class = "form-control", id = "txtCustomerName", autocomplete = "off" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Dịch vụ</label>
                            <div class="col-sm-4">
                                <label id="lblServiceCode" class="form-control" style="background-color: silver;"></label>
                            </div>
                            <div class="col-sm-2">
                                <a href="#" data-toggle="modal" data-target="#myModal" style="margin-top:4px;"
                                   title="Tìm kiếm dịch vụ"  class="btn btn-info fa fa-search" >&nbsp;</a>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Giá</label>
                            <div class="col-sm-10">
                                @Html.EditorFor(m => m.TransactionService.Price,  new
                           {
                               htmlAttributes = new { type = "number", @class = "form-control money", id = "txtPrice" }
                           })
                            </div>
                        </div>
                         <div class="form-group">
                            <label class="col-sm-2 control-label">Loại tiền tệ</label>
                            <div class="col-sm-10">@Html.DropDownListFor(m => m.TransactionService.CurrencyCode, AirlineInvoice.Utils.DataComboSource.LoadCurrency(), new { @class = "form-control", id = "txtCurrency", autocomplete = "off" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Giờ vào</label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.TransactionService.CreateDate, new { @class = "form-control", id = "txtStartTime", autocomplete = "off" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Mô tả</label>
                            <div class="col-sm-10">
                                @Html.TextAreaFor(m => m.TransactionService.Description, new { @class = "form-control", id = "txtDescription", autocomplete = "off" })
                            </div>
                        </div>

                        <div class="hr-line-dashed"></div>
                        <div class="form-group">
                            <div class="col-sm-4 col-sm-offset-2">
                                <a class="btn btn-white" href="@Url.Action("TransactionService", new { TransactionID = AirlineInvoice.Utils.CommonFunction.Shrink(Model.TransactionService.TransactionID)})">Hủy</a>
                                <input type="submit" value="Thêm mới" class="btn btn-primary" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal modal-wide fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Chọn dịch vụ</h4>
            </div>
            <div class="modal-body">
                @{
                    Html.RenderAction("Services", "Search");   
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="fa fa-check btn btn-primary" data-dismiss="modal" onclick="SubmitService();">Đồng ý</button>
            </div>
        </div>

    </div>
</div>
